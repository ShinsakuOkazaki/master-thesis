\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2$\cdot $1}{\ignorespaces Integration of Native Methods \relax }}{5}% 
\contentsline {figure}{\numberline {2$\cdot $2}{\ignorespaces Java Heap Structure\relax }}{7}% 
\contentsline {figure}{\numberline {2$\cdot $3}{\ignorespaces Java Garbage Collection\relax }}{8}% 
\contentsline {figure}{\numberline {2$\cdot $4}{\ignorespaces Memory allocation of ArrayList in Java\relax }}{14}% 
\contentsline {figure}{\numberline {2$\cdot $5}{\ignorespaces Memory allocation of Vector in Rust\relax }}{15}% 
\contentsline {figure}{\numberline {2$\cdot $6}{\ignorespaces Representation of Customer object in Java.\relax }}{15}% 
\contentsline {figure}{\numberline {2$\cdot $7}{\ignorespaces Representation of Customer object in Rust.\relax }}{16}% 
\contentsline {figure}{\numberline {2$\cdot $8}{\ignorespaces Memory allocation of Java ArrayList\relax }}{16}% 
\contentsline {figure}{\numberline {2$\cdot $9}{\ignorespaces Memory allocation of Rust Vector\relax }}{17}% 
\contentsline {figure}{\numberline {2$\cdot $10}{\ignorespaces Difference of Memory allocation of Java ArrayList between Non-initialization and Initialization\relax }}{18}% 
\contentsline {figure}{\numberline {2$\cdot $11}{\ignorespaces Difference of Memory allocation of Rust Vector between Non-initialization and Initialization\relax }}{19}% 
\contentsline {figure}{\numberline {2$\cdot $12}{\ignorespaces Runtime of elements copy from one vector and insertion to the other vector.\relax }}{20}% 
\contentsline {figure}{\numberline {2$\cdot $13}{\ignorespaces Runtime of elements copy from one vector and insertion to the other vector.\relax }}{21}% 
\contentsline {figure}{\numberline {2$\cdot $14}{\ignorespaces Representation of Customer object in Rust.\relax }}{21}% 
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3$\cdot $1}{\ignorespaces Assignment of single-view intensities to RGB components: (a) view \#1; and (b) view \#2. \relax }}{22}% 
\addvspace {10\p@ }
\addvspace {10\p@ }
