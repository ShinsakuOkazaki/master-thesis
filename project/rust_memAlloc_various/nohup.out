   Compiling libc v0.2.66
   Compiling getrandom v0.1.14
   Compiling cfg-if v0.1.10
   Compiling ppv-lite86 v0.2.6
   Compiling c2-chacha v0.2.3
   Compiling rand_core v0.5.1
   Compiling rand_chacha v0.2.1
   Compiling rand v0.7.3
   Compiling rust_memAlloc_various v0.1.0 (/Users/sinsakuokazaki/master-thesis/project/rust_memAlloc_various)
warning: unused import: `std::mem`
 --> src/main.rs:7:5
  |
7 | use std::mem;
  |     ^^^^^^^^
  |
  = note: #[warn(unused_imports)] on by default

warning: unnecessary parentheses around assigned value
   --> src/main.rs:179:16
    |
179 |         sum += (distination[i] as i64);
    |                ^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses
    |
    = note: #[warn(unused_parens)] on by default

warning: unnecessary parentheses around assigned value
   --> src/main.rs:185:21
    |
185 |         true_sum += (i as i64);
    |                     ^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:187:19
    |
187 |     let correct = (sum == true_sum);
    |                   ^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:197:16
    |
197 |         sum += (distination[i] as i64);
    |                ^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:203:21
    |
203 |         true_sum += (i as i64);
    |                     ^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:205:19
    |
205 |     let correct = (sum == true_sum);
    |                   ^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:215:16
    |
215 |         sum += (distination[i].len() as i64);
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:220:21
    |
220 |         true_sum += (source[i].len() as i64);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:223:19
    |
223 |     let correct = (sum == true_sum);
    |                   ^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:233:16
    |
233 |         sum += (distination[i].len() as i64);
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:238:21
    |
238 |         true_sum += (source[i].len() as i64);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unnecessary parentheses around assigned value
   --> src/main.rs:241:19
    |
241 |     let correct = (sum == true_sum);
    |                   ^^^^^^^^^^^^^^^^^ help: remove these parentheses

warning: unreachable pattern
  --> src/main.rs:28:9
   |
28 |         _ => println!("Wrong type")
   |         ^
   |
   = note: #[warn(unreachable_patterns)] on by default

warning: unreachable pattern
   --> src/main.rs:320:9
    |
320 |         _ => String::from(""),
    |         ^

warning: unused variable: `source`
   --> src/main.rs:174:60
    |
174 | fn access_integer_test_mutable(distination :&mut Vec<i32>, source: &Vec<i32>) -> u128 {
    |                                                            ^^^^^^ help: consider prefixing with an underscore: `_source`
    |
    = note: #[warn(unused_variables)] on by default

warning: unused variable: `source`
   --> src/main.rs:192:58
    |
192 | fn access_integer_test_immutable(distination :&Vec<i32>, source: &Vec<i32>) -> u128 {
    |                                                          ^^^^^^ help: consider prefixing with an underscore: `_source`

warning: crate `rust_memAlloc_various` should have a snake case name
  |
  = note: #[warn(non_snake_case)] on by default
  = help: convert the identifier to snake case: `rust_mem_alloc_various`

warning: function `get_methodName` should have a snake case name
   --> src/main.rs:298:4
    |
298 | fn get_methodName(method: i32) -> String {
    |    ^^^^^^^^^^^^^^ help: convert the identifier to snake case: `get_method_name`

warning: function `get_elementType` should have a snake case name
   --> src/main.rs:308:4
    |
308 | fn get_elementType(eltype: i32) -> String {
    |    ^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `get_element_type`

    Finished release [optimized] target(s) in 7.28s
Adding 1000000 elements in Run number  1 
   Compiling libc v0.2.66
   Compiling getrandom v0.1.14
   Compiling cfg-if v0.1.10
   Compiling ppv-lite86 v0.2.6
   Compiling c2-chacha v0.2.3
   Compiling rand_core v0.5.1
   Compiling rand_chacha v0.2.1
   Compiling rand v0.7.3
